0	1	2	3	4	5	6	7	idx
0	0	0	6	8	12	13	13	0
0	0	0	6	8	12	13	13	1
0	0	0	6	8	12	13	13	1
0	0	0	14	14	14	14	14	2
0	0	0						3

일단 가방의 무게를 1단위로 쪼개고, dp 메모리제이션 용도로 써야한다.
1. 첫번째열은 (0인덱스) 각 무게당 가치를 초기화해준다. // 해당 무게가 없는것이 있다면 좌측값을 넣어준다.
2. 두번째 열부터 가장 큰 가치부터 넣어주되, 공간을 넘어서면 넣지 않는다. 그리고 해당 배열의 위치기준 위와 좌의 크기를 비교하여 큰 값을 넣는다.
3. 만약에 가방에 들어갈수 있다면, 해당 배열 위치 기준의 위쪽 + 해당 가방에 들어가는 가치를 초기화 시켜준다
4. dp[n][n]이 최대 가치.


